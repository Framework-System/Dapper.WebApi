Ò
`C:\Projetos FRW\openAiAssistant-frw\Dapper.WebApi\Dapper.WebApi\Controllers\ProductController.cs
	namespace

 	
Dapper


 
.

 
WebApi

 
.

 
Controllers

 #
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
ProductController "
:# $
ControllerBase% 3
{ 
private 
readonly 
IUnitOfWork $

unitOfWork% /
;/ 0
public 
ProductController  
(  !
IUnitOfWork! ,

unitOfWork- 7
)7 8
{ 	
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetAll) /
(/ 0
)0 1
{ 	
var 
data 
= 
await 

unitOfWork '
.' (
Products( 0
.0 1
GetAllAsync1 <
(< =
)= >
;> ?
return 
Ok 
( 
data 
) 
; 
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetById) 0
(0 1
int1 4
id5 7
)7 8
{ 	
var 
data 
= 
await 

unitOfWork '
.' (
Products( 0
.0 1
GetByIdAsync1 =
(= >
id> @
)@ A
;A B
if 
( 
data 
== 
null 
) 
return $
Ok% '
(' (
)( )
;) *
return   
Ok   
(   
data   
)   
;   
}!! 	
["" 	
HttpPost""	 
]"" 
public## 
async## 
Task## 
<## 
IActionResult## '
>##' (
Add##) ,
(##, -
Product##- 4
product##5 <
)##< =
{$$ 	
var%% 
data%% 
=%% 
await%% 

unitOfWork%% '
.%%' (
Products%%( 0
.%%0 1
AddAsync%%1 9
(%%9 :
product%%: A
)%%A B
;%%B C
return&& 
Ok&& 
(&& 
data&& 
)&& 
;&& 
}'' 	
[(( 	

HttpDelete((	 
](( 
public)) 
async)) 
Task)) 
<)) 
IActionResult)) '
>))' (
Delete))) /
())/ 0
int))0 3
id))4 6
)))6 7
{** 	
var++ 
data++ 
=++ 
await++ 

unitOfWork++ '
.++' (
Products++( 0
.++0 1
DeleteAsync++1 <
(++< =
id++= ?
)++? @
;++@ A
return,, 
Ok,, 
(,, 
data,, 
),, 
;,, 
}-- 	
[.. 	
HttpPut..	 
].. 
public// 
async// 
Task// 
<// 
IActionResult// '
>//' (
Update//) /
(/// 0
Product//0 7
product//8 ?
)//? @
{00 	
var11 
data11 
=11 
await11 

unitOfWork11 '
.11' (
Products11( 0
.110 1
UpdateAsync111 <
(11< =
product11= D
)11D E
;11E F
return22 
Ok22 
(22 
data22 
)22 
;22 
}33 	
}44 
}55 Ÿ
hC:\Projetos FRW\openAiAssistant-frw\Dapper.WebApi\Dapper.WebApi\Controllers\WeatherForecastController.cs
	namespace 	
Dapper
 
. 
WebApi 
. 
Controllers #
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class %
WeatherForecastController *
:+ ,
ControllerBase- ;
{ 
private 
static 
readonly 
string  &
[& '
]' (
	Summaries) 2
=3 4
new5 8
[8 9
]9 :
{ 	
$str 
, 
$str !
,! "
$str# +
,+ ,
$str- 3
,3 4
$str5 ;
,; <
$str= C
,C D
$strE L
,L M
$strN S
,S T
$strU a
,a b
$strc n
} 	
;	 

private 
readonly 
ILogger  
<  !%
WeatherForecastController! :
>: ;
_logger< C
;C D
public %
WeatherForecastController (
(( )
ILogger) 0
<0 1%
WeatherForecastController1 J
>J K
loggerL R
)R S
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
IEnumerable 
< 
WeatherForecast *
>* +
Get, /
(/ 0
)0 1
{ 	
var 
rng 
= 
new 
Random  
(  !
)! "
;" #
return 

Enumerable 
. 
Range #
(# $
$num$ %
,% &
$num' (
)( )
.) *
Select* 0
(0 1
index1 6
=>7 9
new: =
WeatherForecast> M
{ 
Date   
=   
DateTime   
.    
Now    #
.  # $
AddDays  $ +
(  + ,
index  , 1
)  1 2
,  2 3
TemperatureC!! 
=!! 
rng!! "
.!!" #
Next!!# '
(!!' (
-!!( )
$num!!) +
,!!+ ,
$num!!- /
)!!/ 0
,!!0 1
Summary"" 
="" 
	Summaries"" #
[""# $
rng""$ '
.""' (
Next""( ,
("", -
	Summaries""- 6
.""6 7
Length""7 =
)""= >
]""> ?
}## 
)## 
.$$ 
ToArray$$ 
($$ 
)$$ 
;$$ 
}%% 	
}&& 
}'' Á

JC:\Projetos FRW\openAiAssistant-frw\Dapper.WebApi\Dapper.WebApi\Program.cs
	namespace

 	
Dapper


 
.

 
WebApi

 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ¦
JC:\Projetos FRW\openAiAssistant-frw\Dapper.WebApi\Dapper.WebApi\Startup.cs
	namespace 	
Dapper
 
. 
WebApi 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddInfrastructure &
(& '
)' (
;( )
services 
. 
AddControllers #
(# $
)$ %
;% &
services   
.   
AddHealthChecks   $
(  $ %
)  % &
;  & '
services!! 
.!! +
AddApplicationInsightsTelemetry!! 4
(!!4 5
)!!5 6
;!!6 7
services"" 
."" 
AddSwaggerGen"" "
(""" #
c""# $
=>""% '
{## 
c$$ 
.$$ 

SwaggerDoc$$ 
($$ 
$str$$ !
,$$! "
new$$# &
OpenApiInfo$$' 2
{%% 
Version&& 
=&& 
$str&& "
,&&" #
Title'' 
='' 
$str'' -
,''- .
}(( 
)(( 
;(( 
})) 
))) 
;)) 
}** 	
public-- 
void-- 
	Configure-- 
(-- 
IApplicationBuilder-- 1
app--2 5
,--5 6
IWebHostEnvironment--7 J
env--K N
)--N O
{.. 	
if// 
(// 
env// 
.// 
IsDevelopment// !
(//! "
)//" #
)//# $
{00 
app11 
.11 %
UseDeveloperExceptionPage11 -
(11- .
)11. /
;11/ 0
}22 
app44 
.44 
UseHttpsRedirection44 #
(44# $
)44$ %
;44% &
app66 
.66 

UseRouting66 
(66 
)66 
;66 
app88 
.88 
UseAuthorization88  
(88  !
)88! "
;88" #
app:: 
.:: 
UseEndpoints:: 
(:: 
	endpoints:: &
=>::' )
{;; 
	endpoints<< 
.<< 
MapControllers<< (
(<<( )
)<<) *
;<<* +
	endpoints== 
.== 
MapHealthChecks== )
(==) *
$str==* 3
)==3 4
;==4 5
}>> 
)>> 
;>> 
appAA 
.AA 

UseSwaggerAA 
(AA 
)AA 
;AA 
appDD 
.DD 
UseSwaggerUIDD 
(DD 
cDD 
=>DD !
{EE 
cFF 
.FF 
SwaggerEndpointFF !
(FF! "
$strFF" <
,FF< =
$strFF> X
)FFX Y
;FFY Z
}GG 
)GG 
;GG 
appII 
.II 
UseEndpointsII 
(II 
	endpointsII &
=>II' )
{JJ 
	endpointsKK 
.KK 
MapControllersKK (
(KK( )
)KK) *
;KK* +
}LL 
)LL 
;LL 
}MM 	
}NN 
}OO õ
RC:\Projetos FRW\openAiAssistant-frw\Dapper.WebApi\Dapper.WebApi\WeatherForecast.cs
	namespace 	
Dapper
 
. 
WebApi 
{ 
public 

class 
WeatherForecast  
{ 
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
int		 
TemperatureC		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public 
int 
TemperatureF 
=>  "
$num# %
+& '
(( )
int) ,
), -
(- .
TemperatureC. :
/; <
$num= C
)C D
;D E
public 
string 
Summary 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} 